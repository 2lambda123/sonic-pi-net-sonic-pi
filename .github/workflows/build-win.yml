name: build win

on:
  push:
    branches: [ action-build-win ]

jobs:
  test:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Set env var for Qt location
      run: |
        cmd /c "setx QT_INSTALL_LOCATION c:\Qt\5.12.9\msvc2017_64"
        $env:QT_INSTALL_LOCATION = "c:\Qt\5.12.9\msvc2017_64"

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7.1

    - name: Install dependencies
      run: |
        gem install win32-process
        gem install rugged --version 0.27.1
        gem install ffi

    - name: Link to Ruby install
      run: |
        cd app\server\native
        new-item -itemtype symboliclink -path . -name ruby -value D:\rubyinstaller-2.7.1-1-x64
        cd ..\..\..

    - name: debug
      run: echo $PWD

    - name: debug 2
      run: dir

    - name: Prebuild & config
      run: .\build-config.ps1

    - name: debug 3
      run: dir app\gui\qt

    - name: Generate translation files
      run: |
        cd app\gui\qt
        cmd /k "$env:QT_INSTALL_LOCATION\bin\lrelease.exe SonicPi.pro"
        cd ..\..\..

    # assuming Qt install brings in CMake & ninja
    - name: CMake build release
      run: |
        cd app\gui\qt\build
        cmake --build . --config Release
        cd ..\..\..\..
